/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package controleacademico.view.pagesAdmin;

import Exceptions.CredenciaisInvalidasException;
import controleacademico.model.Disciplina;
import controleacademico.ControleAcademico;
import controleacademico.controller.DisciplinaController;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Double
 */
public class MenuTurmaAlernativa extends javax.swing.JInternalFrame {

    /**
     * Creates new form Disciplina
     */
    DisciplinaController DisciController = new DisciplinaController();
    ControleAcademico ca = new ControleAcademico();

    public MenuTurmaAlernativa() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        ExibirInformacoes();
    }

    private void ExibirInformacoes() {

        ArrayList<Disciplina> disciPlinaData = DisciplinaController.listaTodasDisciplina();
        DefaultTableModel tbDisciplina = (DefaultTableModel) jtbDisciplina.getModel();
        
        System.out.print("Inicializou o Metodo");
        tbDisciplina.setRowCount(0);

        // Adiciona os dados filtrados ou todos os dados
        for (Disciplina disciplina1 : disciPlinaData) {
            tbDisciplina.addRow(new Object[]{
                disciplina1.getId(),
                disciplina1.getNome(),
                disciplina1.getEmenta()                
            });
        }
        /*for (int i = 0; i < disciPlinaData.size(); i++) {
            jtbDisciplina.setValueAt("", i, 0);
            jtbDisciplina.setValueAt("", i, 1);
            System.out.print("Aqui no 1 " + disciPlinaData.get(i).getNome());

        }
        for (int i = 0; i < disciPlinaData.size() && disciPlinaData.get(i) != null; i++) {
            jtbDisciplina.setValueAt(disciPlinaData.get(i).getId(), i, 0);
            jtbDisciplina.setValueAt(disciPlinaData.get(i).getNome(), i, 1);
            jtbDisciplina.setValueAt(disciPlinaData.get(i).getEmenta(), i, 2);
            System.out.print("Aqui no 2 " + disciPlinaData.get(i).getNome());
        }*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbNome = new javax.swing.JTextField();
        lbEmenta = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnCadastrar = new javax.swing.JButton();
        btnDelete1 = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbDisciplina = new javax.swing.JTable();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        lbEmenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbEmentaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel2.setText("Nome disciplina");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel3.setText("Ementa");

        btnCadastrar.setBackground(new java.awt.Color(0, 102, 94));
        btnCadastrar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCadastrar.setForeground(new java.awt.Color(255, 255, 255));
        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnDelete1.setBackground(new java.awt.Color(255, 51, 51));
        btnDelete1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDelete1.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete1.setText("Excluir");
        btnDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete1ActionPerformed(evt);
            }
        });

        btnActualizar.setBackground(new java.awt.Color(0, 102, 94));
        btnActualizar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnActualizar.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizar.setText("Atualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel2)
                        .addGap(241, 241, 241)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(lbNome, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(lbEmenta, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(410, Short.MAX_VALUE)
                    .addComponent(btnDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(148, 148, 148)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbEmenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(84, Short.MAX_VALUE)
                    .addComponent(btnDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 668, 120));

        jtbDisciplina.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 94), 1, true));
        jtbDisciplina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "id", "Nome", "Ementa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbDisciplina.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbDisciplinaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbDisciplina);
        if (jtbDisciplina.getColumnModel().getColumnCount() > 0) {
            jtbDisciplina.getColumnModel().getColumn(0).setResizable(false);
            jtbDisciplina.getColumnModel().getColumn(1).setResizable(false);
            jtbDisciplina.getColumnModel().getColumn(2).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 670, 250));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lbEmentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lbEmentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lbEmentaActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        // TODO add your handling code here:
        try {
            DefaultTableModel tbDisciplina = (DefaultTableModel) jtbDisciplina.getModel();

            //Object[] dados = {tbDisciplina.getRowCount() + 1, lbNome.getText(), lbEmenta.getText()};
            //tbDisciplina.addRow(dados);
            Disciplina disciplinaModel = new Disciplina();
            disciplinaModel.setId(DisciplinaController.newIdDisciplina());
            disciplinaModel.setNome(lbNome.getText());
            disciplinaModel.setEmenta(lbEmenta.getText());

            DisciplinaController.autenticar(disciplinaModel.getNome(), disciplinaModel.getEmenta());

            if (DisciplinaController.saveDisciplina(disciplinaModel)) {
                lbNome.setText("");
                lbEmenta.setText("");
                ExibirInformacoes();
                JOptionPane.showMessageDialog(null, "Disciplina Cadastrada Com Sucesso!");
            } else {
                JOptionPane.showMessageDialog(null, "Disciplina Não Cadastrada!");
            }
        } catch (CredenciaisInvalidasException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erro na Disciplina", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete1ActionPerformed
        // TODO add your handling code here:

        if (jtbDisciplina.getSelectedRow() != -1) {
            int confirm = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir?", "Confirmação", JOptionPane.YES_NO_OPTION);
            DefaultTableModel tbDisciplina = (DefaultTableModel) jtbDisciplina.getModel();
            //tbDisciplina.removeRow((jtbDisciplina.getSelectedRow()));
            if (confirm == JOptionPane.YES_OPTION) {
                int id = (int) tbDisciplina.getValueAt(jtbDisciplina.getSelectedRow(), 0);
                if (DisciplinaController.RemoveDisciplina(id)) {
                    tbDisciplina.removeRow(jtbDisciplina.getSelectedRow());
                } else {
                    JOptionPane.showMessageDialog(null, "Disciplina excluida Com Sucesso!");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleciona um Produto para excluir");

        }
    }//GEN-LAST:event_btnDelete1ActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        try {
            if (jtbDisciplina.getSelectedRow() != -1) {
                DefaultTableModel tbDisciplina = (DefaultTableModel) jtbDisciplina.getModel();

                //tbDisciplina.removeRow((jtbDisciplina.getSelectedRow()));
                //jtbDisciplina.setValueAt(lbNome.getText(), jtbDisciplina.getSelectedRow(), 1);
                //jtbDisciplina.setValueAt(lbEmenta.getText(), jtbDisciplina.getSelectedRow(), 2);
                int id = (int) tbDisciplina.getValueAt(jtbDisciplina.getSelectedRow(), 0);
                Disciplina disciplinaById = DisciplinaController.getDisciplinaById(id);

                if (disciplinaById != null) {
                    DisciplinaController.validarCamposLogin(lbNome.getText(), lbEmenta.getText());
                    disciplinaById.setNome(lbNome.getText());
                    disciplinaById.setEmenta(lbEmenta.getText());

                    jtbDisciplina.setValueAt(lbNome.getText(), jtbDisciplina.getSelectedRow(), 1);
                    jtbDisciplina.setValueAt(lbEmenta.getText(), jtbDisciplina.getSelectedRow(), 2);
                    JOptionPane.showMessageDialog(null, "Atualizado Com Sucesso");
                }

            } else {
                JOptionPane.showMessageDialog(null, "Seleciona um Produto para Atualizar");
            }
        } catch (CredenciaisInvalidasException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erro na Disciplina", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void jtbDisciplinaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbDisciplinaMouseClicked
        // TODO add your handling code here:
        if (jtbDisciplina.getSelectedRow() != -1) {
            lbNome.setText(jtbDisciplina.getValueAt(jtbDisciplina.getSelectedRow(), 1).toString());
            lbEmenta.setText(jtbDisciplina.getValueAt(jtbDisciplina.getSelectedRow(), 2).toString());
            DefaultTableModel tbDisciplina = (DefaultTableModel) jtbDisciplina.getModel();
            //tbDisciplina.removeRow((jtbDisciplina.getSelectedRow()));
        }
    }//GEN-LAST:event_jtbDisciplinaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnDelete1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtbDisciplina;
    private javax.swing.JTextField lbEmenta;
    private javax.swing.JTextField lbNome;
    // End of variables declaration//GEN-END:variables
}
